---
name: CI Tests

on:
  pull_request:
    branches:
     - main

env:
  # https://www.jeffgeerling.com/blog/2020/getting-colorized-output-molecule-and-ansible-on-github-actions-ci
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'

jobs:
  molecule:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        distros:
          - geerlingguy/docker-centos7-ansible:latest
          # Centos 8 reached EOL. This patch didn't work: https://github.com/geerlingguy/docker-centos8-ansible/blob/master/Dockerfile#L18
          # - geerlingguy/docker-centos8-ansible:latest
          - geerlingguy/docker-rockylinux8-ansible:latest
          - ghcr.io/artis3n/docker-almalinux8-ansible:latest
          - ghcr.io/artis3n/docker-rhel8-ansible:latest
          - ghcr.io/artis3n/docker-oraclelinux8-ansible:latest
          - ghcr.io/artis3n/docker-amazonlinux2-ansible:latest
          - ghcr.io/artis3n/docker-ubuntu2104-ansible:latest
          #  20.10 is EOL
          # apt update: "The repository 'http://archive.ubuntu.com/ubuntu groovy Release' does not have a Release file"
          # - ghcr.io/artis3n/docker-ubuntu2010-ansible:latest
          - geerlingguy/docker-ubuntu2004-ansible:latest
          - geerlingguy/docker-ubuntu1804-ansible:latest
          - geerlingguy/docker-ubuntu1604-ansible:latest
          - geerlingguy/docker-debian11-ansible:latest
          - geerlingguy/docker-debian10-ansible:latest
          - geerlingguy/docker-debian9-ansible:latest
          - geerlingguy/docker-fedora31-ansible:latest
          - ghcr.io/artis3n/docker-arch-ansible:latest
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Install dependency manager
        run: pipx install poetry

      - name: Set up Python 3.x
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          # Once supported in https://github.com/actions/setup-python/pull/281
#          cache: 'poetry'

      - name: Install packages
        run: poetry install --no-interaction

      - name: Lint
        run: make lint

      - name: Molecule
        run: poetry run molecule test --scenario-name default
        env:
          MOLECULE_DISTRO: "${{ matrix.distros }}"
          TAILSCALE_CI_KEY: "${{ secrets.TAILSCALE_CI_KEY }}"

  molecule-skip-auth:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependency manager
        run: pipx install poetry

      - name: Set up Python 3.x
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          # Once supported in https://github.com/actions/setup-python/pull/281
#          cache: 'poetry'

      - name: Install packages
        run: poetry install --no-interaction

      - name: Molecule - Skip Authentication
        run: poetry run molecule test --scenario-name skip-authentication

  molecule-vars-priority:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependency manager
        run: pipx install poetry

      - name: Set up Python 3.x
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          # Once supported in https://github.com/actions/setup-python/pull/281
#          cache: 'poetry'

      - name: Install packages
        run: poetry install --no-interaction

      - name: Molecule - Vars Priority Validation
        run: poetry run molecule test --scenario-name vars-priority
        env:
          TAILSCALE_CI_KEY: "${{ secrets.TAILSCALE_CI_KEY }}"
