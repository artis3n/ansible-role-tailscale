---
name: CI Tests

on:
  pull_request:
    branches:
     - main

# TODO: Remove after molecule is fixed
# https://github.com/ansible-community/molecule/pull/3409
defaults:
  run:
    working-directory: 'artis3n.tailscale'

env:
  # https://www.jeffgeerling.com/blog/2020/getting-colorized-output-molecule-and-ansible-on-github-actions-ci
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'

jobs:
  molecule:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        distros:
          - geerlingguy/docker-centos7-ansible:latest
          - geerlingguy/docker-centos8-ansible:latest
          - ghcr.io/artis3n/docker-oraclelinux8-ansible:latest
          - ghcr.io/artis3n/docker-amazonlinux2-ansible:latest
          - ghcr.io/artis3n/docker-ubuntu2104-ansible:latest
          #  20.10 is EOL
          # apt update: "The repository 'http://archive.ubuntu.com/ubuntu groovy Release' does not have a Release file"
          # - ghcr.io/artis3n/docker-ubuntu2010-ansible:latest
          - geerlingguy/docker-ubuntu2004-ansible:latest
          - geerlingguy/docker-ubuntu1804-ansible:latest
          - geerlingguy/docker-ubuntu1604-ansible:latest
          - geerlingguy/docker-debian11-ansible:latest
          - geerlingguy/docker-debian10-ansible:latest
          - geerlingguy/docker-debian9-ansible:latest
          - geerlingguy/docker-fedora31-ansible:latest
          - ghcr.io/artis3n/docker-arch-ansible:latest
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        # TODO: Remove after molecule is fixed
        # https://github.com/ansible-community/molecule/pull/3409
        with:
          path: 'artis3n.tailscale'

      - name: Install pipenv
        run: pipx install pipenv

      - name: Set up Python 3.x
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: 'pipenv'

      - name: Install packages
        run: pipenv install --dev

      - name: Lint
        run: make lint

      - name: Molecule
        run: pipenv run molecule test --scenario-name default
        env:
          MOLECULE_DISTRO: "${{ matrix.distros }}"
          TAILSCALE_CI_KEY: "${{ secrets.TAILSCALE_CI_KEY }}"

  molecule-skip-auth:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        # TODO: Remove after molecule is fixed
        # https://github.com/ansible-community/molecule/pull/3409
        with:
          path: 'artis3n.tailscale'

      - name: Install pipenv
        run: pipx install pipenv

      - name: Set up Python 3.x
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: 'pipenv'

      - name: Install packages
        run: pipenv install --dev

      - name: Molecule - Skip Authentication
        run: pipenv run molecule test --scenario-name skip-authentication

  molecule-vars-priority:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        # TODO: Remove after molecule is fixed
        # https://github.com/ansible-community/molecule/pull/3409
        with:
          path: 'artis3n.tailscale'

      - name: Install pipenv
        run: pipx install pipenv

      - name: Set up Python 3.x
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: 'pipenv'

      - name: Install packages
        run: pipenv install --dev

      - name: Molecule - Vars Priority Validation
        run: pipenv run molecule test --scenario-name vars-priority
        env:
          TAILSCALE_CI_KEY: "${{ secrets.TAILSCALE_CI_KEY }}"
