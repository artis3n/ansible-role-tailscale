---
- name: Tailscale Auth Key Required
  fail:
    msg: >
      You must include a Node Authorization auth key.
      Set a `tailscale_auth_key` ansible-vault encrypted variable.
      You can create this key from: https://login.tailscale.com/admin/authkeys"
  when: tailscale_auth_key is not defined

- name: Unstable Warning
  # Print an error message to the console but proceed anyway
  fail:
    msg: >
      Installing Tailscale from the unstable branch.
      This is bleeding edge and may have issues.
      Be warned.
  when: release_stability | lower == 'unstable'
  ignore_errors: yes

- name: Operating System
  debug:
    msg: "{{ ansible_distribution }} {{ ansible_distribution_major_version }} ({{ ansible_distribution_release }})"

- name: CentOS and related families
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Amazon'
  include_tasks: centos.yml

- name: Debian and related families
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian' or ansible_distribution == 'Pop!_OS'
  include_tasks: debian.yml

- name: Fedora and related families
  when: ansible_distribution == 'Fedora'
  include_tasks: fedora.yml

- name: Arch
  when: ansible_distribution == 'Archlinux'
  include_tasks: arch.yml

- name: Enable Service
  become: yes
  service:
    name: "{{ tailscale_service }}"
    state: started
    enabled: yes

- name: Check if Tailscale is connected
  command: tailscale status
  changed_when: false
  register: tailscale_status

- name: Tailscale Status
  debug:
    var: tailscale_status
  when: verbose | bool

- name: Record Tailscale Version
  command: tailscale version
  changed_when: false
  register: tailscale_version
  when: verbose | bool

- name: Tailscale Version
  debug:
    msg: "{{ tailscale_version.stdout.split('\n') }}"
  when: verbose | bool

- name: Bring Tailscale Up
  become: yes
  # The command module cannot use | ; &
  # So we are ok not quoting the variables
  command: tailscale up --authkey={{ tailscale_auth_key }} {{ tailscale_args | default() }}
  # Since the auth key is included in this task, we do not want to log output
  no_log: true
  register: tailscale_start
  when: >
    tailscale_status.stdout | length == 0
    or tailscale_status.stdout is match('\[L\+V9o\]')
  notify: Confirm Tailscale is Connected
